#!/bin/bash

# This is a prototype for a script that would be used in place of a command.
# The example is dnf, I want that whenever I do a sudo dnf install, it does the
# thing but also logs that command so that I have a place to look to know what
# packages I've installed ever.
# So I want to be able to do
# DNF install saf asfas fasasfda faffad
# and it calls this script which will do
# sudo dnf install saf asfas fasasfda faffad

# Link to this file and the name of the link will show up
# as $0.  We can use this to select which file we log to
# or we could say that you log to $1 and shift once

call_name=$0
cmd=$1


echo $0
case $call_name in
<<<<<<< HEAD
	*DNF|*dnf)
=======
	*log_dnf)
>>>>>>> c3ed2a0f7ba926a913b409ac387c863d4fbc01ec
		log_file=~/.philconfig/DNFADD.txt
		cmd="sudo dnf"
		;;
	*LOG_BREW|*log_brew)
		log_file=~/.philconfig/BREW.txt
		cmd=brew
		;;
esac

datestamp(){
	date +'%a %b %d %G'
}


if ! grep "$(datestamp)" $log_file > /dev/null ; then
	echo "================================================================================" >> $log_file
	echo "================================ $(datestamp) ===============================" >> $log_file
	echo "================================================================================" >> $log_file
fi

<<<<<<< HEAD
echo $cmd $@ >> $log_file
eval $cmd $@ 
=======

echo $cmd $@ >> $log_file
eval $cmd $@
>>>>>>> c3ed2a0f7ba926a913b409ac387c863d4fbc01ec
echo -n "any comments [y/n] ? : "
read answer
if [[ "$answer" == y ]] ; then
	echo -n "$(tput setaf 5) >>> $(tput sgr 0)"
	echo "==================================== COMMENTS ==================================" >> $log_file
<<<<<<< HEAD
	cat | sed 's/^/   > /g' >> $log_file
=======
	cat | sed 's/^/   > /g' >>  $log_file
>>>>>>> c3ed2a0f7ba926a913b409ac387c863d4fbc01ec
	echo ""
fi

