#!/usr/bin/env -S bash -o errexit -o nounset -o errtrace -O inherit_errexit -O nullglob

repo_dir=$(command git rev-parse --show-toplevel)
if ! [[ -f ${repo_dir}/.gitmodules ]] ; then
    echo "ERROR: This repo has no submodules" >&2
    exit 1
fi

submodule_directories=($(git submodule foreach --quiet 'echo $PWD' | sed "s|^${repo_dir}/||" | sort))
declare -i max_length=0
for s in "${submodule_directories[@]}" ; do if (( ${#s} > max_length )) ; then max_length=${#s} ; fi ; done

printf "R: Registered commit (red means checked out commit is not the same\n"
printf "C: Checked out commit\n"

for s in "${submodule_directories[@]}" ; do
    registered_sha=$(git rev-parse :${s})
    checked_out_sha=$(env -C ${repo_dir}/${s} git rev-parse HEAD)
    if [[ "${registered_sha}" == "${checked_out_sha}" ]] ; then
        mark=$'\033[32mR\033[0m'
    else
        mark=$'\033[31mR\033[0m'
    fi

    format="%C(yellow)%h%C(reset)%<(30,trunc)%C(auto)%d%<|(140,trunc)%C(cyan)%s%C(reset)"
    printf "\033[1;37m%-${max_length}s\033[0m %s %s\n" \
        "${s}" \
        "${mark}" \
        "$(env -C ${repo_dir}/${s} git -c color.ui=always log -n 1 --format=${format} ${registered_sha})"

    if [[ ${registered_sha} != ${checked_out_sha} ]] ; then
        printf "%-${max_length}s %s %s\n" \
            "" \
            "C" \
            "$(env -C ${repo_dir}/${s} git -c color.ui=always log -n 1 --format="${format}" ${checked_out_sha})"
    fi
done
