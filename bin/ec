#!/bin/bash

function main(){
  case "$1" in
    -k)
        emacsclient -e '(kill-emacs)'
        exit 0
        ;;
    -K)
        kill_emacs_by_pid
        exit 0
        ;;
    -s)
        emacs --daemon
        exit 0
        ;;
    -r)
        emacsclient -e '(kill-emacs)'
        emacs --daemon
        exit 0
        ;;
    -rs)
        emacsclient -e '(kill-emacs)'
        emacs --daemon
        shift
        ;;
    -sshc)
        shift
        ssh -t apt-imac "/usr/local/bin/emacsclient -t ~/CloudStation/gtd/GTD_InTray.org"
        exit 0
        ;;
    -ssh)
        shift
        ssh -t apt-imac "/usr/local/bin/emacsclient -t $@"
        exit 0
        ;;
    -co)
	       echo "imac"
	       ssh -t apt-imac "/usr/local/bin/emacsclient -nw"
	       echo "mini"
	       ssh -t mini "/usr/local/bin/emacsclient -nw"
	       # echo "frontal-rocks"
	       # ssh -t frontal-rocks "/usr/local/bin/emacsclient -nw"
	       # echo "silent-thunder"
	       # ssh -t silent-thunder "/usr/local/bin/emacsclient -nw"
	       exit 0
         ;;
     -fo)
	       echo "imac"
	       ssh -t apt-imac "cd .emacs.d ; git fetch ; git merge --ff-only"
	       echo "mini"
	       ssh -t mini "cd .emacs.d ; git fetch ; git merge --ff-only"
         ;;
  esac

    if [[ -z $1 ]] ; then
        emacsclient -c --no-wait
    else
        if [[ " $@" == *\ -t* ]] ; then
            emacsclient $@
        else
            emacsclient -c --no-wait $@
        fi
    fi
}

function kill_emacs_by_pid(){
    if [[ $(uname) == Darwin ]] ; then
        emacs_process=$(ps -aupcarphin| grep Emacs.app | grep -v grep)
    else
        emacs_process=$(ps -aux | grep 'emacs --daemon' | grep -v grep)
    fi
    emacs_pid=$(awk '{print $2;}' <<< $emacs_process)

    if [[ -z $emacs_process ]] ; then
        echo "No emacs process found"
        return 1
    fi

    echo "emacs_process: $(awk '{print $2 " " $5;}' <<< $emacs_process)"
    echo -n "Kill this process? (y/n): "; read answer

    if [[ -z $answer ]] ; then
        return
    fi

    if [[ -z $answer ]] || ! ([[ $answer == y ]] || [[ $answer == Y ]]) ; then
        return
    fi

    echo kill $emacs_pid
    kill $emacs_pid
}

main $@
